name: Run Nightfall test suite

on:
  push:
    branches:
      - liju.jose/test-configure-github-actions-3

jobs:
  eslint-test:
    name: Run eslint check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.15.3'
      - run: npm ci
      - name: Run check for ESLint errors
        run: npm run lint

  zkp-unit-test-sha:
    name: ZKP microservice unit test (HASH_TYPE = sha)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.15.3'
      - name: Pull docker image
        run: docker pull zokrates/zokrates:0.5.1
      - name: Increase swap memory
        run: |
          sudo usermod -a -G sudo runner
          sudo swapoff -a
          sudo fallocate -l 12G /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          swapon --show
          grep SwapTotal /proc/meminfo
      - name: Build docker images
        run: docker-compose build
      - name: Generate the keys and constraint files for Zero Knowledge Proofs
        run: |
          chmod -R 777 zkp/code/
          npm run setupAll
      - name: Remove ZoKrates Containers
        run: |
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)
          free -h
          df -h
          du -h -d 1 zkp/code/gm17
      - name: Setup ganache container, deploy zkp contracts
        run: |
          docker-compose run --rm truffle-zkp compile --all
          docker-compose run --rm truffle-zkp migrate --reset --network=default
      - name: Start merkle-tree microservice
        run: docker-compose up -d merkle-tree
      - name: Run zkp unit tests
        run: docker-compose run --rm zkp npm test

  zkp-unit-test-mimc:
    name: ZKP microservice unit test (HASH_TYPE = mimc)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.15.3'
      - name: Pull docker image
        run: |
          docker images -a
          docker rmi $(docker images -aq)
          ps aux
          docker pull zokrates/zokrates:0.5.1
      - name: Increase swap memory
        run: |
          sudo usermod -a -G sudo runner
          sudo swapoff -a
          sudo fallocate -l 12G /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          swapon --show
          grep SwapTotal /proc/meminfo
      - name: Build docker images
        run: docker-compose build
      - name: Generate the keys and constraint files for Zero Knowledge Proofs
        run: |
          chmod -R 777 zkp/code/
          npm run setupAll-mimc
      - name: Remove ZoKrates Containers
        run: |
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)
          sync
          sudo sh -c 'echo 3 >/proc/sys/vm/drop_caches'
          free -h
          df -h
          du -h -d 1 zkp/code/gm17
          du -h /mnt
      - name: Rename mimc docker-compose yml file
        run: mv docker-compose.override.mimc.yml docker-compose.override.yml
      - name: Setup ganache container, deploy zkp contracts
        run: |
          docker-compose run --rm truffle-zkp compile --all
          docker-compose run --rm truffle-zkp migrate --reset --network=default
      - name: Start merkle-tree microservice
        run: docker-compose up -d merkle-tree
      - name: Run zkp unit tests
        run: docker-compose run --rm zkp npm test
      - name: debug
        if: failure()
        run: |
          free -h
          df -h

  integration-test-sha:
    name: Run integration test (HASH_TYPE = sha)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.15.3'
      - name: Pull docker image
        run: docker pull zokrates/zokrates:0.5.1
      - name: Increase swap memory
        run: |
          sudo usermod -a -G sudo runner
          sudo swapoff -a
          sudo fallocate -l 12G /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          swapon --show
          grep SwapTotal /proc/meminfo
      - name: Build docker images
        run: docker-compose build
      - name: Generate the keys and constraint files for Zero Knowledge Proofs
        run: |
          chmod -R 777 zkp/code/
          npm run setupAll
      - name: Remove ZoKrates Containers
        run: |
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)
      - name: Run integration test
        run: ./nightfall-test
      - name: If integration test failed, upload logs files as artifacts
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: integration-test-logs
          path: nightfall_test.log

  integration-test-mimc:
    name: Run integration test (HASH_TYPE = mimc)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.15.3'
      - name: Pull docker image
        run: docker pull zokrates/zokrates:0.5.1
      - name: Increase swap memory
        run: |
          sudo usermod -a -G sudo runner
          sudo swapoff -a
          sudo fallocate -l 12G /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          swapon --show
          grep SwapTotal /proc/meminfo
      - name: Build docker images
        run: docker-compose build
      - name: Generate the keys and constraint files for Zero Knowledge Proofs
        run: |
          chmod -R 777 zkp/code/
          npm run setupAll-mimc
      - name: Remove ZoKrates Containers
        run: |
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)
      - name: Rename mimc docker-compose yml file
        run: mv docker-compose.override.mimc.yml docker-compose.override.yml
      - name: Run integration test
        run: ./nightfall-test
      - name: If integration test failed, upload logs files as artifacts
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: integration-test-logs
          path: nightfall_test.log
